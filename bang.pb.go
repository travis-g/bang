// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bang.proto

package main

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Bang_EscapeMethod int32

const (
	Bang_QUERY_ESCAPE Bang_EscapeMethod = 0
	Bang_PASS_THROUGH Bang_EscapeMethod = 1
	Bang_PATH_ESCAPE  Bang_EscapeMethod = 2
)

var Bang_EscapeMethod_name = map[int32]string{
	0: "QUERY_ESCAPE",
	1: "PASS_THROUGH",
	2: "PATH_ESCAPE",
}

var Bang_EscapeMethod_value = map[string]int32{
	"QUERY_ESCAPE": 0,
	"PASS_THROUGH": 1,
	"PATH_ESCAPE":  2,
}

func (x Bang_EscapeMethod) String() string {
	return proto.EnumName(Bang_EscapeMethod_name, int32(x))
}

func (Bang_EscapeMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a267da1eca5e2d1b, []int{0, 0}
}

type Bang struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Format               string            `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"`
	Description          string            `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	EscapeMethod         Bang_EscapeMethod `protobuf:"varint,4,opt,name=escape_method,json=escapeMethod,proto3,enum=main.Bang_EscapeMethod" json:"escape_method,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Bang) Reset()         { *m = Bang{} }
func (m *Bang) String() string { return proto.CompactTextString(m) }
func (*Bang) ProtoMessage()    {}
func (*Bang) Descriptor() ([]byte, []int) {
	return fileDescriptor_a267da1eca5e2d1b, []int{0}
}

func (m *Bang) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bang.Unmarshal(m, b)
}
func (m *Bang) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bang.Marshal(b, m, deterministic)
}
func (m *Bang) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bang.Merge(m, src)
}
func (m *Bang) XXX_Size() int {
	return xxx_messageInfo_Bang.Size(m)
}
func (m *Bang) XXX_DiscardUnknown() {
	xxx_messageInfo_Bang.DiscardUnknown(m)
}

var xxx_messageInfo_Bang proto.InternalMessageInfo

func (m *Bang) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Bang) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *Bang) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Bang) GetEscapeMethod() Bang_EscapeMethod {
	if m != nil {
		return m.EscapeMethod
	}
	return Bang_QUERY_ESCAPE
}

func init() {
	proto.RegisterEnum("main.Bang_EscapeMethod", Bang_EscapeMethod_name, Bang_EscapeMethod_value)
	proto.RegisterType((*Bang)(nil), "main.Bang")
}

func init() { proto.RegisterFile("bang.proto", fileDescriptor_a267da1eca5e2d1b) }

var fileDescriptor_a267da1eca5e2d1b = []byte{
	// 203 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0x4a, 0xcc, 0x4b,
	0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xc9, 0x4d, 0xcc, 0xcc, 0x53, 0xba, 0xce, 0xc8,
	0xc5, 0xe2, 0x94, 0x98, 0x97, 0x2e, 0x24, 0xc4, 0xc5, 0x92, 0x97, 0x98, 0x9b, 0x2a, 0xc1, 0xa8,
	0xc0, 0xa8, 0xc1, 0x19, 0x04, 0x66, 0x0b, 0x89, 0x71, 0xb1, 0xa5, 0xe5, 0x17, 0xe5, 0x26, 0x96,
	0x48, 0x30, 0x81, 0x45, 0xa1, 0x3c, 0x21, 0x05, 0x2e, 0xee, 0x94, 0xd4, 0xe2, 0xe4, 0xa2, 0xcc,
	0x82, 0x92, 0xcc, 0xfc, 0x3c, 0x09, 0x66, 0xb0, 0x24, 0xb2, 0x90, 0x90, 0x0d, 0x17, 0x6f, 0x6a,
	0x71, 0x72, 0x62, 0x41, 0x6a, 0x7c, 0x6e, 0x6a, 0x49, 0x46, 0x7e, 0x8a, 0x04, 0x8b, 0x02, 0xa3,
	0x06, 0x9f, 0x91, 0xb8, 0x1e, 0xc8, 0x52, 0x3d, 0x90, 0x85, 0x7a, 0xae, 0x60, 0x79, 0x5f, 0xb0,
	0x74, 0x10, 0x4f, 0x2a, 0x12, 0x4f, 0xc9, 0x99, 0x8b, 0x07, 0x59, 0x56, 0x48, 0x80, 0x8b, 0x27,
	0x30, 0xd4, 0x35, 0x28, 0x32, 0xde, 0x35, 0xd8, 0xd9, 0x31, 0xc0, 0x55, 0x80, 0x01, 0x24, 0x12,
	0xe0, 0x18, 0x1c, 0x1c, 0x1f, 0xe2, 0x11, 0xe4, 0x1f, 0xea, 0xee, 0x21, 0xc0, 0x28, 0xc4, 0xcf,
	0xc5, 0x1d, 0xe0, 0x18, 0xe2, 0x01, 0x53, 0xc2, 0x94, 0xc4, 0x06, 0xf6, 0xa6, 0x31, 0x20, 0x00,
	0x00, 0xff, 0xff, 0x39, 0x33, 0x5c, 0x6b, 0xf4, 0x00, 0x00, 0x00,
}
